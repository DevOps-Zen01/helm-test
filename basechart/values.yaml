basechart:
  # กำหนดจำนวน replicas
  replicaCount: 1
  # การกำหนดค่า Container Image
  image:
    repository:
    tag:
    pullPolicy: Always
    imagePullSecrets: []
  nameOverride: "notification-service"
  fullnameOverride: "notification-service"
  serviceAccount:
    create: true
    name: "notification-service" # เปลี่ยนเป็นชื่อที่ไม่ซ้ำกับที่มีอยู่
    annotations: {}
    automount: true
  podAnnotations: {}
  podLabels:
    tier: be
  podSecurityContext:
    runAsUser: 101
  securityContext:
  runAsNonRoot: true
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
    add:
      - NET_BIND_SERVICE
  deployment:
    containerPort: 5005
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
  volumeMounts: []
  volumes: []
  service:
    type: ClusterIP
    port: 5005 # เปลี่ยนเป็น 3090
    targetPort: 5005 # เปลี่ยนเป็น 3090
    annotations: {}
    nameOverride: "notification-service"
    fullnameOverride: "notification-service"
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      kubernetes.io/ingress.class: nginx
      # เพิ่ม annotations สำหรับ NGINX Ingress
      nginx.ingress.kubernetes.io/proxy-body-size: "50m"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    hosts:
      - host: test.local
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test.local
                port:
                  number: 5005
        tls: [] # เพิ่ม TLS config ถ้าต้องการใช้ HTTPS
  # ปรับ liveness probe
  # livenessProbe:
  #   enabled: false
  #   httpGet:
  #     path: 
  #     port: 5005
  #   initialDelaySeconds: 60  # เพิ่มเวลารอ
  #   periodSeconds: 15
  #   timeoutSeconds: 5
  #   failureThreshold: 5
  # # ปรับ readiness probe
  # readinessProbe:
  #   enabled: false
  #   httpGet:
  #     path: 
  #     port: 5005
  #   initialDelaySeconds: 45  # เพิ่มเวลารอ
  #   periodSeconds: 10
  #   timeoutSeconds: 3
  #   failureThreshold: 5
  # เพิ่ม resources ที่เหมาะสม
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 1000m
      memory: 512Mi # ลดลงจาก 1Gi
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
image:
  tag: 5b70f0b
  repository: zenloxbit/go-hello
